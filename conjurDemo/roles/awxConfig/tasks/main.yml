---
- name: download awx
  git:
    dest: /opt/awx
    clone: yes
    force: yes
    repo: https://github.com/ansible/awx.git
  when: ansible_install == 'YES'

- name: configure AWX
  shell: |
    cd /opt/awx/installer
    sed -i "s,host_port=80,host_port={{ ansible_port }},g" ./inventory
    sed -i "s,.*default_admin_password=.*,default_admin_password={{ ansible_password }},g" ./inventory
    sed -i "s,# default_admin_user=admin,default_admin_user={{ ansible_user }},g" ./inventory
    mkdir -p "{{ ansible_awx_data_dir }}"
    sed -i "s,#? *postgres_data_dir=/tmp/pgdocker,postgres_data_dir={{ ansible_awx_data_dir }},g" ./inventory
  when: ansible_install == 'YES'

- name: start up awx
  shell: ansible-playbook -i inventory install.yml
  args:
    chdir: /opt/awx/installer
  when: ansible_install == 'YES'

- name: Wait for AWX
  uri:
    url: "{{ ansible_external_url_login }}"
    validate_certs: no
    return_content: yes
  register: webpage
  until: '"working..." in webpage.content'
  retries: 240
  delay: 2
  when: ansible_install == 'YES'

- name: connect instances to docker network
  shell: |
    docker network connect conjur awx_web
    docker network connect conjur awx_task
  ignore_errors: yes
  when: ansible_install == 'YES'

- pause:
    seconds: 10
  when: ansible_install == 'YES'

- include_tasks: awx.yml
  when: ansible_install == 'YES'

- include_tasks: pas.yml
  when: ansible_pas == 'YES' and ansible_install == 'YES'
